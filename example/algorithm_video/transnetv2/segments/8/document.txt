Segment: 8
Time Interval: 00:08:47.399, 00:11:36.232
Closed Captions:
topological sort and the last algorithm i wanted to quickly go over is jixtra's shortest path algorithm this is definitely a popular famous algorithm and it does show up in leak code though it's not super common in leak code and encoding interviews but it's definitely a good to know you'll definitely learn this in school just like the name says it's about finding the shortest path from one node so let's say we had a starting node a we want to find the shortest path from a to every single node in the graph a b c d e right we want to find the length of the shortest path now the graphs we've been looking at so far have been pretty simple graphs right each edge actually doesn't have any weight associated with it each edge basically has a weight of one right a simple weight because they're all equal but we could actually have edges of different values suppose we had something like this so this makes finding the shortest path a little bit more difficult because we actually have to look at the values of every single edge in the graph now and the overall time complexity of jigsaw's algorithm is actually more complex than a regular dfs it's typically e log v where v is the number of nodes or vertices in the graph e is the number of edges in the graph it's a little bit more complex it's a little bit of a worse time complexity because we have to deal with these edges now how are we going to deal with these edges what data structure are we going to use a heap or a priority queue however you want to call it is usually the main data structure used to find the shortest path because we're going to have to be looking at the minimum edge and we're going to have to be looking at the minimum of many different values so the heap is going to be very helpful for doing that and you still don't want to you know get stuck in a cycle so hash sets are also helpful for this algorithm and just to give you a quick rundown of how this algorithm would work on this example we'd start at a we'd look at the shortest edge it's one so then we'd get to b we'd say you know the length to get to b is just going to be one then we'd look at the next two edges that are available to us we'd choose the smaller one this one which would get us to c so we'd say to get to c it just takes a length of two a weight of two and then we'd look at our next uh frontier we could we could choose the five or the two of course we're going to choose the two so then we'd say at this point d uh the cost to get to d is actually four we don't just include this single two but we also include the previous two that it took and then the last edge is e or the last node is e how long does it take to get to e basically as far as it takes to get to d which is four plus this one so e is five so this is kind of the uh you know the shortest paths to every single node in the out in the graph and for a more in-depth look
Image Analysis:
Common Elements Across Images:
1. Both images feature diagrams that represent a graph with vertices labeled A, B, C, D, and E.
2. The title "Dijkstra's Shortest Path Algo" is present in both, indicating the subject is Dijkstra's algorithm, which is used to find the shortest path in a graph from a single source vertex to all other vertices.
3. Both images contain a box that mentions time complexity and data structures, though the second image does not have these details filled in.
4. An "Output" section is present in both images, with the first image showing the output values for the shortest path to each vertex.

Themes Suggested by Elements:
- The diagrams and text are related to computer science, specifically to the concept of graph theory and algorithms.
- The presence of the algorithm's name suggests educational or instructional content, likely explaining or demonstrating how Dijkstra's algorithm works.
- The output in the first image and the empty output area in the second image may indicate a before-and-after scenario, with the first image showing the result of applying the algorithm and the second image showing the initial state before calculation.

Patterns or Consistent Messages:
- The focus is on the educational explanation of Dijkstra's algorithm.
- The use of a graph with weighted edges in both images to represent the problem space that the algorithm addresses.
- The consistent layout of the images indicates they are part of a sequence, probably from a presentation or a step-by-step guide.

Summary of Scene's Likely Narrative or Main Topic:
The images are likely from an educational resource explaining Dijkstra's algorithm for finding the shortest path in a graph. The first image shows the algorithm after it has been applied, with the shortest path costs to each vertex calculated and displayed. The second image appears to be a blank template ready to be filled in with the algorithm's time complexity, the data structures used, and the output after execution. The overall narrative conveyed by the images is the process of teaching or demonstrating how Dijkstra's algorithm is used to solve a shortest-path problem in graph theory.